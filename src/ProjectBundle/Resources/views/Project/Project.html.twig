{% extends 'ProjectBundle:Default:Project.html.twig' %}

{% block project_title %}Liste des projets {% endblock %}

{% block project_content %}
    <div class="container">
        <nav class="navbar navbar-light bg-light">
            <form class="form-inline">
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addProject"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Ajouter un projet</button>
            </form>
        </nav>
        <div class="modal fade" id="addProject" tabindex="-1" role="dialog" aria-labelledby="addProjectLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <form method="POST" action="{{ path('projet_new')}}"  {{ form_enctype(form) }} id="addProjectForm">
                        <div class="modal-body">
                            <div class="form-group has-feedback {% if (form_errors(form.name) |length > 4) %}has-error{% endif %}">
                                {{ form_label(form.name) }} :
                                {{ form_widget(form.name, { 'attr': {'class': 'form-control'} }) }}
                                {{ form_errors(form.name) }}
                            </div>
                            <div class="form-group has-feedback {% if (form_errors(form.sourcecodeUrl) |length > 4) %}has-error{% endif %}">
                                {{ form_label(form.sourcecodeUrl) }} :
                                {{ form_widget(form.sourcecodeUrl, { 'attr': {'class': 'form-control'} }) }}
                                {{ form_errors(form.sourcecodeUrl) }}
                            </div>
                            <div class="form-group has-feedback {% if (form_errors(form.jtracId) |length > 4) %}has-error{% endif %}">
                                {{ form_label(form.jtracId) }} :
                                {{ form_widget(form.jtracId, { 'attr': {'class': 'form-control'} }) }}
                                {{ form_errors(form.jtracId) }}
                            </div>
                            <div class="form-group has-feedback {% if (form_errors(form.jiraId) |length > 4) %}has-error{% endif %}">
                                {{ form_label(form.jiraId) }} :
                                {{ form_widget(form.jiraId, { 'attr': {'class': 'form-control'} }) }}
                                {{ form_errors(form.jiraId) }}
                            </div>
                            <div class="form-group">
                                {{ form_rest(form) }}
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Fermer</button>
                            <button type="submit" class="btn btn-primary" id="submitProject">Valider</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        {{ table_HTML| raw }}
    </div>
{% endblock %}

{% block project_javascript %}
    <script src="{{ asset('bundles/fosjsrouting/js/router.js') }}"></script>
    <script src="{{ path('fos_js_routing_js', { callback: 'fos.Router.setData' }) }}"></script>
    {{ table_JS| raw }}
    <script type="text/javascript">
        $(document).on('click','.edit-row',function(){
            var that = this;
            var baseurl = Routing.generate('projet_edit', {'id': this.parentNode.parentNode.id});;
            alert(baseurl);



        });

        $('#addProjectForm').submit(function (e) {
            e.preventDefault();

            $.ajax({
                type: $(this).attr('method'),
                url: $(this).attr('action'),
                data: $(this).serialize()
            })
                .done(function (data) {
                    if (typeof data.message !== 'undefined') {
                        alert(data.message);
                        var projectTable = $('#projectTable').DataTable();
                        projectTable.row.add( {
                            "name": $('#projectbundle_project_name').val(),
                            "sourcecodeUrl": $('#projectbundle_project_sourcecodeUrl').val(),
                            "jtracId": $('#projectbundle_project_jtracId').val(),
                            "jiraId": $('#projectbundle_project_jiraId').val()
                        } ).draw( false );
                        $('#addProjectForm')[0].reset();
                        $('#addProject').modal('toggle');
                    }
                })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    if (typeof jqXHR.responseJSON !== 'undefined') {
                        if (jqXHR.responseJSON.hasOwnProperty('form')) {
                            $('#form_body').html(jqXHR.responseJSON.form);
                        }

                        $('.form_error').html(jqXHR.responseJSON.message);

                    } else {
                        alert(errorThrown);
                    }

                });
        });
    </script>
{% endblock %}