<?php

namespace ProjectBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ActivityRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ActivityRepository extends EntityRepository
{
    /**
     * Retourne la liste des activitÃ©s
     *
     * @param $libelle
     * @param $cadreContractuel
     * @param $etat
     * @param $project
     * @return array
     */
    public function getActivitys($libelle,$cadreContractuel,$etat,$project){

        $query      = $this->createQueryBuilder('a');
        $query->select('p.name project, a.id DT_RowId, a.libelle, a.cadreContractuel, a.etat, DATE_FORMAT(a.dateCreation,\'%d/%m/%Y\') as dateCreation, DATE_FORMAT(a.dateModification,\'%d/%m/%Y\') as dateModification')
            ->leftJoin("a.project",'p')
            ->orderBy('a.dateCreation', 'ASC');

        if($libelle !=-1 && $libelle != 'all' && $libelle != Null){
            $query->andWhere('a.libelle = :libelle')
                ->setParameter('libelle',$libelle);
        }
        if($cadreContractuel !=-1 && $cadreContractuel != 'all' && $cadreContractuel != Null){
            $query->andWhere('a.cadreContractuel = :cadreContractuel')
                ->setParameter('cadreContractuel',$cadreContractuel);
        }
        if($etat !=-1 && $etat != 'all' && $etat != Null){
            $query->andWhere('a.etat = :etat')
                ->setParameter('etat',$etat);
        }
        if($project !=-1 && $project != 'all' && $project != Null){
            $query->andWhere('a.project = :project')
                ->setParameter('project',$project);
        }

        return $query->getQuery()->getArrayResult();
    }
}
