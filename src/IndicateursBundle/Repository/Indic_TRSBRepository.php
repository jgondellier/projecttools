<?php

namespace IndicateursBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * Indic_TRSBRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Indic_TRSBRepository extends EntityRepository
{
    /**
     * Retourne l'info trsb pour l'item
     *
     * @param $itemId
     * @return mixed
     */
    public function getTRSBByItemId($itemId)
    {
        $query = $this->createQueryBuilder('t');
        $query->select('t')
            ->where('t.Indic_items = :itemId')
            ->setParameter('itemId', $itemId);

        return $query->getQuery()->getOneOrNullResult();
    }

    /**
     * Donne les tickets par mois et par projet en fonction de la date donnÃ©e.
     *
     * @param $year
     * @param $field
     * @return $array
     */
    public function getDateByMonthProject($year,$project,$field){
        /*
         * SELECT MONTH(t.`open_date`) mo, i.project_id p,count(t.id) FROM `indic_trsb` t left join indic_items i ON t.indic_items_id = i.id GROUP BY mo,p
         * */
        $query = $this->createQueryBuilder('t');
        $query->select('MONTH(t.'.$field.') mois, i.projectId projet,count(t.id) somme')
            ->leftJoin("t.Indic_items",'i')
            ->groupBy('mois')
            ->addGroupBy('projet')
            ->where('YEAR(t.'.$field.') = :year')
            ->orderBy('t.'.$field, 'ASC')
            ->setParameter('year', $year);

        if($project !=-1){
            $query->andWhere('i.projectId = :project')
                ->setParameter('project',$project);
        }

        return $query->getQuery()->getArrayResult();
    }

    public function getRefusedCountByMonthProject($year,$project){
        $query = $this->createQueryBuilder('t');
        $query->select('MONTH(t.correctedDate) mois, i.projectId projet,count(t.refusedCount) somme')
            ->leftJoin("t.Indic_items",'i')
            ->groupBy('mois')
            ->addGroupBy('projet')
            ->where('YEAR(t.correctedDate) = :year')
            ->andWhere('t.refusedCount IS NOT NULL')
            ->orderBy('t.correctedDate', 'ASC')
            ->setParameter('year', $year);

        if($project !=-1){
            $query->andWhere('i.projectId = :project')
                ->setParameter('project',$project);
        }

        return $query->getQuery()->getArrayResult();
    }
}
