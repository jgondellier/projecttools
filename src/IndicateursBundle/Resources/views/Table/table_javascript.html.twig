<script type="text/javascript">
    function getTable{{ table.id }}(){
        $.fn.dataTable.moment( 'MMMM','fr' );
        $('#{{ table.id }}').DataTable( {
            "ajax":{
                "url": "{{ table.ajax.url }}",
                {% if(table.ajax.datas is defined) %}
                "data": {
                    {% for data in table.ajax.datas %}
                    "{{ data.name }}": "{{ data.value }}",
                    {% endfor %}
                },
                {% endif %}
            },
            "columns": [
                {% for col in table.cols %}
                { "data": "{{ col.data }}"{% if(col.href is defined) %},
                    "fnCreatedCell": function (nTd, sData, oData, iRow, iCol) {
                        {% if(col.href is empty) %}
                            $(nTd).html("<a href='"+oData.{{ col.data }}+"' target='_blank'>"+oData.{{ col.data }}+"</a>");
                        {% else %}
                            $(nTd).html("<a href='{{ col.href }}"+oData.{{ col.data }}+"' target='_blank'>"+oData.{{ col.data }}+"</a>");
                        {% endif %}
                    }
                    {% elseif ((col.convert is defined)) %},
                    "fnCreatedCell": function (nTd, sData, oData, iRow, iCol) {
                        $(nTd).html(Math.round(oData.{{ col.data }}/60)+" heures");
                    }
                    {% elseif ((col.com is defined)) %},
                    "defaultContent": "<button type=\"button\" class=\"btn btn-primary btn-sm com-row\" ><span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span></button>"
                    {% elseif ((col.edit is defined)) %},
                    "defaultContent": "<button type=\"button\" class=\"btn btn-primary btn-sm edit-row\"><span class=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span></button>"
                    {% elseif ((col.del is defined)) %},
                    "defaultContent": "<button type=\"button\" class=\"btn btn-danger btn-sm del-row\" ><span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span></button>"
                    {% elseif ((col.detail is defined)) %},
                    "defaultContent": "<span class=\"glyphicon glyphicon-download\" aria-hidden=\"true\"></span>"
                    {% endif %}
                    {% if(col.width is defined) %},"width": "{{ col.width }}"{% endif %}
                    {% if(col.visible is defined) %},"visible": "{{ col.visible }}"{% endif %}
                    {% if(col.class is defined) %},"className": "{{ col.class }}"{% endif %}
                    {% if(col.searchable is defined) %},"searchable":false{% endif %}
                    {% if(col.orderable is defined) %},"orderable":false{% endif %}
                },
                {% endfor %}
            ],
            {% if(table.order is defined) %}
            "order": [[{{ table.order }}, 'asc']],
            {% endif %}
            "scrollY":        "350px",
            "scrollCollapse": true,
            "paging":         false,
            "dom": 'Bfrtip',
            "buttons": [
                'excel', 'pdf', 'print'
            ],
            initComplete: function () {
                this.api().columns('.select-filter').every( function () {
                    var column = this;
                    var select = $('<select><option value=""></option></select>')
                            .appendTo( $(column.footer()).empty() )
                            .on( 'change', function () {
                                var val = $.fn.dataTable.util.escapeRegex(
                                        $(this).val()
                                );
                                column
                                        .search( val ? '^'+val+'$' : '', true, false )
                                        .draw();
                                var title = column.header();
                                {% if(graph is defined) %}
                                var table = $('#{{ table.id }}').DataTable();
                                var datas = {};
                                $('#{{ table.id }}_wrapper .dataTables_scrollFoot select').each(function( index ) {
                                    var columnHeader = table.column( index ).header();
                                    datas[columnHeader.id] = $( this ).val();
                                });
                                if (typeof getGraph{{ graph.id }} === "function") {
                                    getGraph{{ graph.id }}(datas);
                                }
                                {% endif %}
                            } );
                    column.data().unique().sort().each( function ( d, j ) {
                        select.append( '<option value="'+d+'">'+d+'</option>' )
                    } );
                } );
            }
        } );
    }
    addLoadEvent(getTable{{ table.id }});
    $('#{{ table.id }}').on('click','td.detail-row',function(){
        var that = this;
        var activityID = that.parentNode.id;
        var tr = $(that).closest('tr');
        var DataTable = $('#{{ table.id }}').DataTable();
        var row = DataTable.row( tr );
        if ( row.child.isShown() ) {
            row.child.hide();
            $(that).find("span").removeClass("rotate");
            $(that).find("span").removeClass("rotateinverse90");
        }else{
            $(that).find("span").addClass("rotate");
            var url = Routing.generate('activitycomment_list', {'id': activityID});
            var type = 'GET';
            $(that).find("span").addClass("rotateinverse90");
            getDetail(type,url,row);
        }

    });
    function getDetail(type,url,row){
        if (url === false || typeof url === 'undefined') return;

        $.ajax({
            type: type,
            url: url
        })
            .done(function (data) {
                if (typeof data.message !== 'undefined') {
                    if(data.type === 'list'){
                        $(".rotate").removeClass("rotate");
                        row.child( data.list ).show();
                    }
                }
                return "<div class=\"alert alert-danger\" role=\"alert\">Un probl√®me est survenue</div>"
            })
            .fail(function (jqXHR, textStatus, errorThrown) {
                if (typeof jqXHR.responseJSON !== 'undefined') {
                    return data.message;
                } else {
                    alert(errorThrown);
                }
            });
    }
</script>